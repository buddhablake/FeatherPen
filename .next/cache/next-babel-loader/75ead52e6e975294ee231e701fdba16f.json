{"ast":null,"code":"import dbConnect from '../../../utils/dbConnect';\nimport Posts from '../../../models/post';\nimport Sessions from '../../../models/session';\ndbConnect();\nexport default (async (req, res) => {\n  const {\n    method,\n    body,\n    headers: {\n      authorization\n    }\n  } = req;\n\n  switch (method) {\n    case \"GET\":\n      try {\n        const posts = await Posts.find({});\n        res.status(200).json({\n          success: true,\n          data: posts\n        });\n      } catch (err) {\n        res.status(400).json({\n          success: false\n        });\n      }\n\n      break;\n\n    case \"POST\":\n      try {\n        const session = await Sessions.findOne({\n          sessionId: authorization\n        });\n        body.author = session.userId;\n        const newPost = await Posts.create(body);\n        res.status(200).json({\n          success: true,\n          data: newPost\n        });\n      } catch (err) {\n        res.status(400).json({\n          success: false\n        });\n      }\n\n    default:\n      res.status(400).json({\n        success: false\n      });\n      break;\n  }\n});","map":{"version":3,"sources":["/Users/blakedouglass/Desktop/projects/Pair_Programming/FeatherPen/pages/api/posts/index.js"],"names":["dbConnect","Posts","Sessions","req","res","method","body","headers","authorization","posts","find","status","json","success","data","err","session","findOne","sessionId","author","userId","newPost","create"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,0BAAtB;AACA,OAAOC,KAAP,MAAkB,sBAAlB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AAEAF,SAAS;AAET,gBAAe,OAAOG,GAAP,EAAWC,GAAX,KACf;AACE,QAAM;AAACC,IAAAA,MAAD;AAASC,IAAAA,IAAT;AAAeC,IAAAA,OAAO,EAAE;AAACC,MAAAA;AAAD;AAAxB,MAA2CL,GAAjD;;AAEA,UAAQE,MAAR;AACE,SAAK,KAAL;AACE,UAAI;AACA,cAAMI,KAAK,GAAG,MACdR,KAAK,CAACS,IAAN,CAAW,EAAX,CADA;AAEAN,QAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACC,UAAAA,OAAO,EAAC,IAAT;AAAeC,UAAAA,IAAI,EAACL;AAApB,SAArB;AACH,OAJD,CAIE,OAAMM,GAAN,EAAW;AACTX,QAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBC,UAAAA,OAAO,EAAC;AADW,SAArB;AAEH;;AACD;;AAEA,SAAK,MAAL;AACE,UAAI;AACA,cAAMG,OAAO,GAAG,MAAMd,QAAQ,CAACe,OAAT,CAAiB;AACrCC,UAAAA,SAAS,EAAEV;AAD0B,SAAjB,CAAtB;AAIAF,QAAAA,IAAI,CAACa,MAAL,GAAcH,OAAO,CAACI,MAAtB;AAGA,cAAMC,OAAO,GAAG,MAChBpB,KAAK,CAACqB,MAAN,CAAahB,IAAb,CADA;AAEAF,QAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACC,UAAAA,OAAO,EAAC,IAAT;AAAeC,UAAAA,IAAI,EAACO;AAApB,SAArB;AACH,OAXD,CAWE,OAAMN,GAAN,EAAW;AACTX,QAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBC,UAAAA,OAAO,EAAC;AADW,SAArB;AAEH;;AAEH;AACET,MAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBC,QAAAA,OAAO,EAAC;AADW,OAArB;AAGA;AAjCN;AAoCD,CAxCD","sourcesContent":["import dbConnect from '../../../utils/dbConnect'\nimport Posts from '../../../models/post'\nimport Sessions from '../../../models/session'\n\ndbConnect()\n\nexport default async (req,res) =>\n{ \n  const {method, body, headers: {authorization}} = req\n\n  switch (method) {\n    case \"GET\":\n      try {\n          const posts = await\n          Posts.find({})\n          res.status(200).json({success:true, data:posts})\n      } catch(err) {\n          res.status(400).json({\n            success:false})\n      }\n      break\n\n      case \"POST\":\n        try {\n            const session = await Sessions.findOne({\n              sessionId: authorization\n            })\n\n            body.author = session.userId\n\n\n            const newPost = await\n            Posts.create(body)\n            res.status(200).json({success:true, data:newPost})\n        } catch(err) {\n            res.status(400).json({\n              success:false})\n        }\n\n      default:\n        res.status(400).json({\n          success:false\n        })\n        break\n\n  }\n}\n"]},"metadata":{},"sourceType":"module"}