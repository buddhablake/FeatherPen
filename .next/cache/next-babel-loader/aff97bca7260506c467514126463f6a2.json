{"ast":null,"code":"var _jsxFileName = \"/Users/blakedouglass/Desktop/projects/Pair_Programming/FeatherPen/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from \"next/link\";\nimport verifySession from \"../utils/useVerify\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nconst Index = () => {\n  // const [ verified, checkForSession ] = verifySession()\n  //\n  // useEffect(() => {\n  //   checkForSession()\n  // }, [])\n  //\n  // if(!verified){\n  //   return <div> <h1>You need to log in</h1> </div>\n  // }\n  const {\n    0: posts,\n    1: setPosts\n  } = useState([]);\n  useEffect(() => {\n    axios.get(\"api/posts\").then(res => {\n      setPosts(res.data.data);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n  return __jsx(\"div\", {\n    className: \"flex gap-8 p-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, posts.length ? posts.map((post, index) => {\n    return __jsx(\"div\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 15\n      }\n    }, __jsx(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }\n    }, post.title), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }\n    }, post.body), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }\n    }, post._id), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }\n    }, post.author));\n  }) : null);\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/blakedouglass/Desktop/projects/Pair_Programming/FeatherPen/pages/index.js"],"names":["Link","verifySession","useEffect","useState","axios","Index","posts","setPosts","get","then","res","data","catch","err","console","log","length","map","post","index","title","body","_id","author"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,aAAP,MAA0B,oBAA1B;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBJ,QAAQ,CAAC,EAAD,CAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,KAAK,CACFI,GADH,CACO,WADP,EAEGC,IAFH,CAESC,GAAD,IAAS;AACbH,MAAAA,QAAQ,CAACG,GAAG,CAACC,IAAJ,CAASA,IAAV,CAAR;AACD,KAJH,EAKGC,KALH,CAKUC,GAAD,IAAS;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,KAPH;AAQD,GATQ,EASN,EATM,CAAT;AAWA,SACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGP,KAAK,CAACU,MAAN,GACGV,KAAK,CAACW,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACzB,WACE;AAAK,MAAA,GAAG,EAAEA,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKD,IAAI,CAACE,KAAV,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIF,IAAI,CAACG,IAAT,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIH,IAAI,CAACI,GAAT,CAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIJ,IAAI,CAACK,MAAT,CAJF,CADF;AAQD,GATD,CADH,GAWG,IAZN,CADF;AAgBD,CAvCD;;AAwCA,eAAelB,KAAf","sourcesContent":["import Link from \"next/link\";\nimport verifySession from \"../utils/useVerify\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nconst Index = () => {\n  // const [ verified, checkForSession ] = verifySession()\n  //\n  // useEffect(() => {\n  //   checkForSession()\n  // }, [])\n  //\n  // if(!verified){\n  //   return <div> <h1>You need to log in</h1> </div>\n  // }\n  const [posts, setPosts] = useState([]);\n\n  useEffect(() => {\n    axios\n      .get(\"api/posts\")\n      .then((res) => {\n        setPosts(res.data.data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  return (\n    <div className=\"flex gap-8 p-10\">\n      {posts.length\n        ? posts.map((post, index) => {\n            return (\n              <div key={index}>\n                <h2>{post.title}</h2>\n                <p>{post.body}</p>\n                <p>{post._id}</p>\n                <p>{post.author}</p>\n              </div>\n            );\n          })\n        : null}\n    </div>\n  );\n};\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}