{"ast":null,"code":"var _s = $RefreshSig$();\n\n// import { useState } from \"react\";\n// import axios from \"axios\";\n// import Register from \"../pages/register\";\n// import Link from \"next/link\";\n//\n// const verifySession = () => {\n//   const [verified, setVerified] = useState({\n//     data: (\n//       <div>\n//         <h1>Loading...</h1>\n//       </div>\n//     ),\n//   });\n//\n//   const checkForSession = () => {\n//     axios\n//       .get(\"/api/session\", {\n//         headers: {\n//           authorization: localStorage.getItem(\"authorization\"),\n//         },\n//       })\n//       .then((res) => {\n//         if (res.data.success) {\n//           setVerified({\n//             success: true,\n//           });\n//         } else {\n//           setVerified({\n//             loading: false,\n//             success: false,\n//             data: (\n//               <div>\n//                 <h1>Ooops, somethings not right on our end</h1>\n//                 <p>\n//                   Please{\" \"}\n//                   <Link href=\"/register\">\n//                     <a>register</a>\n//                   </Link>{\" \"}\n//                   to continue\n//                 </p>\n//               </div>\n//             ),\n//           });\n//         }\n//       })\n//       .catch((err) => {\n//         console.log(err);\n//         setVerified({\n//           data: (\n//             <div>\n//               <h1>Ooops, somethings not right on our end</h1>\n//               <p>\n//                 Please{\" \"}\n//                 <Link href=\"/register\">\n//                   <a>register</a>\n//                 </Link>{\" \"}\n//                 to continue\n//               </p>\n//             </div>\n//           ),\n//         });\n//       });\n//   };\n//   return [verified, checkForSession];\n// };\n// export default verifySession;\nimport { useState } from \"react\";\nimport axios from \"axios\";\n\nvar useVerify = function useVerify() {\n  _s();\n\n  var _useState = useState({\n    loading: true\n  }),\n      verified = _useState[0],\n      setVerified = _useState[1];\n\n  var checkForSession = function checkForSession() {\n    if (localStorage.getItem(\"authorization\") === null) {\n      setVerified(false);\n      return;\n    }\n\n    axios.get(\"/api/session\", {\n      headers: {\n        authorization: localStorage.getItem(\"authorization\")\n      }\n    }).then(function (res) {\n      if (res.data.success) {\n        setVerified(true);\n      } else {\n        setVerified(false);\n      }\n    })[\"catch\"](function (err) {\n      setVerified(false);\n    });\n  };\n\n  return [verified, checkForSession];\n};\n\n_s(useVerify, \"JSBxYsvjzYFkRS2hLZodOUSiby0=\");\n\nexport default useVerify;","map":{"version":3,"sources":["/Users/blakedouglass/Desktop/projects/Pair_Programming/FeatherPen/utils/useVerify.js"],"names":["useState","axios","useVerify","loading","verified","setVerified","checkForSession","localStorage","getItem","get","headers","authorization","then","res","data","success","err"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAGA,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AAAA;;AAAA,kBACUF,QAAQ,CAAC;AAAEG,IAAAA,OAAO,EAAE;AAAX,GAAD,CADlB;AAAA,MACfC,QADe;AAAA,MACLC,WADK;;AAEtB,MAAMC,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAC5B,QAAIC,YAAY,CAACC,OAAb,CAAqB,eAArB,MAA0C,IAA9C,EAAoD;AAClDH,MAAAA,WAAW,CAAC,KAAD,CAAX;AACA;AACD;;AACDJ,IAAAA,KAAK,CACFQ,GADH,CACO,cADP,EACuB;AACnBC,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAEJ,YAAY,CAACC,OAAb,CAAqB,eAArB;AADR;AADU,KADvB,EAMGI,IANH,CAMQ,UAACC,GAAD,EAAS;AACb,UAAIA,GAAG,CAACC,IAAJ,CAASC,OAAb,EAAsB;AACpBV,QAAAA,WAAW,CAAC,IAAD,CAAX;AACD,OAFD,MAEO;AACLA,QAAAA,WAAW,CAAC,KAAD,CAAX;AACD;AACF,KAZH,WAaS,UAACW,GAAD,EAAS;AACdX,MAAAA,WAAW,CAAC,KAAD,CAAX;AACD,KAfH;AAgBD,GArBD;;AAsBA,SAAO,CAACD,QAAD,EAAWE,eAAX,CAAP;AACD,CAzBD;;GAAMJ,S;;AA0BN,eAAeA,SAAf","sourcesContent":["// import { useState } from \"react\";\n// import axios from \"axios\";\n// import Register from \"../pages/register\";\n// import Link from \"next/link\";\n//\n// const verifySession = () => {\n//   const [verified, setVerified] = useState({\n//     data: (\n//       <div>\n//         <h1>Loading...</h1>\n//       </div>\n//     ),\n//   });\n//\n//   const checkForSession = () => {\n//     axios\n//       .get(\"/api/session\", {\n//         headers: {\n//           authorization: localStorage.getItem(\"authorization\"),\n//         },\n//       })\n//       .then((res) => {\n//         if (res.data.success) {\n//           setVerified({\n//             success: true,\n//           });\n//         } else {\n//           setVerified({\n//             loading: false,\n//             success: false,\n//             data: (\n//               <div>\n//                 <h1>Ooops, somethings not right on our end</h1>\n//                 <p>\n//                   Please{\" \"}\n//                   <Link href=\"/register\">\n//                     <a>register</a>\n//                   </Link>{\" \"}\n//                   to continue\n//                 </p>\n//               </div>\n//             ),\n//           });\n//         }\n//       })\n//       .catch((err) => {\n//         console.log(err);\n//         setVerified({\n//           data: (\n//             <div>\n//               <h1>Ooops, somethings not right on our end</h1>\n//               <p>\n//                 Please{\" \"}\n//                 <Link href=\"/register\">\n//                   <a>register</a>\n//                 </Link>{\" \"}\n//                 to continue\n//               </p>\n//             </div>\n//           ),\n//         });\n//       });\n//   };\n//   return [verified, checkForSession];\n// };\n// export default verifySession;\n\n\nimport { useState } from \"react\";\nimport axios from \"axios\";\n\n\nconst useVerify = () => {\n  const [verified, setVerified] = useState({ loading: true });\n  const checkForSession = () => {\n    if (localStorage.getItem(\"authorization\") === null) {\n      setVerified(false);\n      return;\n    }\n    axios\n      .get(\"/api/session\", {\n        headers: {\n          authorization: localStorage.getItem(\"authorization\"),\n        },\n      })\n      .then((res) => {\n        if (res.data.success) {\n          setVerified(true);\n        } else {\n          setVerified(false);\n        }\n      })\n      .catch((err) => {\n        setVerified(false);\n      });\n  };\n  return [verified, checkForSession];\n};\nexport default useVerify;\n"]},"metadata":{},"sourceType":"module"}